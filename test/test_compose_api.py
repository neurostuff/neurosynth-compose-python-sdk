# coding: utf-8

"""
    Analysis Specification for Meta-analysis

    api to create a meta-analysis specification

    The version of the OpenAPI document: 1.0
    Contact: jamesdkent21@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurosynth_compose_sdk.api.compose_api import ComposeApi


class TestComposeApi(unittest.TestCase):
    """ComposeApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ComposeApi()

    def tearDown(self) -> None:
        pass

    def test_annotations_get(self) -> None:
        """Test case for annotations_get

        GET a list of annotations
        """
        pass

    def test_annotations_id_get(self) -> None:
        """Test case for annotations_id_get

        GET information about an annotation
        """
        pass

    def test_annotations_id_put(self) -> None:
        """Test case for annotations_id_put

        Update an Annotation
        """
        pass

    def test_annotations_post(self) -> None:
        """Test case for annotations_post

        Create a new Annotation
        """
        pass

    def test_meta_analyses_get(self) -> None:
        """Test case for meta_analyses_get

        GET a list of meta-analyses
        """
        pass

    def test_meta_analyses_id_get(self) -> None:
        """Test case for meta_analyses_id_get

        GET meta-analysis information
        """
        pass

    def test_meta_analyses_id_put(self) -> None:
        """Test case for meta_analyses_id_put

        Update a meta-analysis
        """
        pass

    def test_meta_analyses_post(self) -> None:
        """Test case for meta_analyses_post

        Create a new meta-analysis
        """
        pass

    def test_meta_analysis_results_get(self) -> None:
        """Test case for meta_analysis_results_get

        Your GET endpoint
        """
        pass

    def test_meta_analysis_results_id_get(self) -> None:
        """Test case for meta_analysis_results_id_get

        Your GET endpoint
        """
        pass

    def test_meta_analysis_results_id_put(self) -> None:
        """Test case for meta_analysis_results_id_put

        
        """
        pass

    def test_meta_analysis_results_post(self) -> None:
        """Test case for meta_analysis_results_post

        
        """
        pass

    def test_projects_get(self) -> None:
        """Test case for projects_get

        Your GET endpoint
        """
        pass

    def test_projects_id_delete(self) -> None:
        """Test case for projects_id_delete

        
        """
        pass

    def test_projects_id_get(self) -> None:
        """Test case for projects_id_get

        Your GET endpoint
        """
        pass

    def test_projects_id_put(self) -> None:
        """Test case for projects_id_put

        
        """
        pass

    def test_projects_post(self) -> None:
        """Test case for projects_post

        
        """
        pass

    def test_specifications_get(self) -> None:
        """Test case for specifications_get

        Get a list of Specifications
        """
        pass

    def test_specifications_id_get(self) -> None:
        """Test case for specifications_id_get

        Get information about a Specification
        """
        pass

    def test_specifications_id_put(self) -> None:
        """Test case for specifications_id_put

        Update Meta-Analysis specification
        """
        pass

    def test_specifications_post(self) -> None:
        """Test case for specifications_post

        Create a Specification
        """
        pass

    def test_studysets_get(self) -> None:
        """Test case for studysets_get

        Get a list of Studysets
        """
        pass

    def test_studysets_id_get(self) -> None:
        """Test case for studysets_id_get

        Get information about a Studyset
        """
        pass

    def test_studysets_id_put(self) -> None:
        """Test case for studysets_id_put

        Update a Studyset
        """
        pass

    def test_studysets_post(self) -> None:
        """Test case for studysets_post

        Create a new Studyset
        """
        pass


if __name__ == '__main__':
    unittest.main()
